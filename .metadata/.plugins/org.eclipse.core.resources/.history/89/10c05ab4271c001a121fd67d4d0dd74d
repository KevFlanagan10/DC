package com.shops;

import java.sql.SQLException;
import java.sql.SQLIntegrityConstraintViolationException;
import java.util.ArrayList;

import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.context.FacesContext;

import com.mysql.jdbc.CommunicationsException;


@ManagedBean
@SessionScoped

public class StoresController {
	
	DAO dao;
	ArrayList<Store> stores;
	
	
	public StoresController() {
		super();
		try {
			dao = new DAO();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
//===========================================================
//loadStore
	public String loadStores() {
		System.out.println("In loadstores()");
		try {
			stores = dao.loadStores();
		} catch (Exception e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		return null;
	}
//==============================================================
//deleteStore
	
	public void deleteStore(int id) {
		System.out.println(id);
		try {
			dao.deleteStore(id);
		} catch (SQLException e) {
			FacesMessage message = 
					new FacesMessage("Error: Store ID already exists");
					FacesContext.getCurrentInstance().addMessage(null, message);
			e.printStackTrace();
		}
	}	

//===============================================================
	//=====Add Store=====
		public String addStore(Store store) {
			System.out.println(store.getName() + " " + store.getFounded());
			try {
				dao.addStore(store);
				return "ManageStores";
			} catch (SQLIntegrityConstraintViolationException e) {
				FacesMessage message = 
						new FacesMessage("Error: Store " + store.name + " already exists!");
						FacesContext.getCurrentInstance().addMessage(null, message);
			} catch (CommunicationsException e) {
				FacesMessage message = 
						new FacesMessage("Error: Can't communicate with DB");
						FacesContext.getCurrentInstance().addMessage(null, message);
			}catch (Exception e) {
				FacesMessage message = 
						new FacesMessage("Error: " + e.getMessage());
						FacesContext.getCurrentInstance().addMessage(null, message);

				e.printStackTrace();
			}
			return null;
		}
	
	public ArrayList<Store> getStores() {
		return stores;
	}
}
